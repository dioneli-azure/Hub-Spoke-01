{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "ipGroups_ipgroup1_name": {
            "defaultValue": "ipgroup1",
            "type": "String"
        },
        "ipGroups_ipgroup2_name": {
            "defaultValue": "ipgroup2",
            "type": "String"
        },
        "virtualMachines_vm_iis_name": {
            "defaultValue": "vm-iis",
            "type": "String"
        },
        "bastionHosts_bastion_hub_name": {
            "defaultValue": "bastion-hub",
            "type": "String"
        },
        "virtualNetworks_vnet_hub_name": {
            "defaultValue": "vnet-hub",
            "type": "String"
        },
        "virtualMachines_vm_onprem_name": {
            "defaultValue": "vm-onprem",
            "type": "String"
        },
        "connections_Hub_to_Onprem_name": {
            "defaultValue": "Hub-to-Onprem",
            "type": "String"
        },
        "connections_Onprem_to_Hub_name": {
            "defaultValue": "Onprem-to-Hub",
            "type": "String"
        },
        "virtualNetworks_vnet_spoke_name": {
            "defaultValue": "vnet-spoke",
            "type": "String"
        },
        "azureFirewalls_hub_firewall_name": {
            "defaultValue": "hub-firewall",
            "type": "String"
        },
        "networkInterfaces_vm_iis975_name": {
            "defaultValue": "vm-iis975",
            "type": "String"
        },
        "routeTables_rt_hub_to_spoke_name": {
            "defaultValue": "rt-hub-to-spoke",
            "type": "String"
        },
        "routeTables_rt_spoke_to_hub_name": {
            "defaultValue": "rt-spoke-to-hub",
            "type": "String"
        },
        "virtualNetworks_vnet_onprem_name": {
            "defaultValue": "vnet-onprem",
            "type": "String"
        },
        "natGateways_hub_firewall_NAT_name": {
            "defaultValue": "hub-firewall-NAT",
            "type": "String"
        },
        "publicIPAddresses_GW_hub_pip1_name": {
            "defaultValue": "GW-hub-pip1",
            "type": "String"
        },
        "publicIPAddresses_GW_hub_pip2_name": {
            "defaultValue": "GW-hub-pip2",
            "type": "String"
        },
        "publicIPAddresses_vnet_hub_ip_name": {
            "defaultValue": "vnet-hub-ip",
            "type": "String"
        },
        "virtualNetworkGateways_GW_hub_name": {
            "defaultValue": "GW-hub",
            "type": "String"
        },
        "networkInterfaces_vm_onprem940_name": {
            "defaultValue": "vm-onprem940",
            "type": "String"
        },
        "virtualMachines_vm_jumpbox_spoke_name": {
            "defaultValue": "vm-jumpbox-spoke",
            "type": "String"
        },
        "publicIPAddresses_GW_onprem_pip1_name": {
            "defaultValue": "GW-onprem-pip1",
            "type": "String"
        },
        "publicIPAddresses_GW_onprem_pip2_name": {
            "defaultValue": "GW-onprem-pip2",
            "type": "String"
        },
        "virtualNetworkGateways_GW_onprem_name": {
            "defaultValue": "GW-onprem",
            "type": "String"
        },
        "publicIPAddresses_hub_firewall_pip_name": {
            "defaultValue": "hub-firewall-pip",
            "type": "String"
        },
        "networkSecurityGroups_vm_onprem_nsg_name": {
            "defaultValue": "vm-onprem-nsg",
            "type": "String"
        },
        "firewallPolicies_hub_firewall_policy_name": {
            "defaultValue": "hub-firewall-policy",
            "type": "String"
        },
        "networkInterfaces_vm_jumpbox_spoke63_name": {
            "defaultValue": "vm-jumpbox-spoke63",
            "type": "String"
        },
        "publicIPAddresses_hub_firewall_NAT_pip_name": {
            "defaultValue": "hub-firewall-NAT-pip",
            "type": "String"
        },
        "networkSecurityGroups_ServersSubnet_nsg_name": {
            "defaultValue": "ServersSubnet-nsg",
            "type": "String"
        },
        "networkSecurityGroups_vnet_hub_workload_nsg_northeurope_name": {
            "defaultValue": "vnet-hub-workload-nsg-northeurope",
            "type": "String"
        },
        "networkSecurityGroups_vnet_spoke_workload_nsg_northeurope_name": {
            "defaultValue": "vnet-spoke-workload-nsg-northeurope",
            "type": "String"
        },
        "networkSecurityGroups_vnet_onprem_workload_nsg_australiaeast_name": {
            "defaultValue": "vnet-onprem-workload-nsg-australiaeast",
            "type": "String"
        },
        "networkSecurityGroups_dioneli_vnet_JumpboxSubnet_nsg_northeurope_name": {
            "defaultValue": "dioneli-vnet-JumpboxSubnet-nsg-northeurope",
            "type": "String"
        },
        "networkSecurityGroups_vnet_hub_AzureBastionSubnet_nsg_northeurope_name": {
            "defaultValue": "vnet-hub-AzureBastionSubnet-nsg-northeurope",
            "type": "String"
        },
        "networkSecurityGroups_vnet_spoke_AzureBastionSubnet_nsg_northeurope_name": {
            "defaultValue": "vnet-spoke-AzureBastionSubnet-nsg-northeurope",
            "type": "String"
        },
        "networkSecurityGroups_dioneli_vnet_Dioneli_Rt_Subnet_nsg_northeurope_name": {
            "defaultValue": "dioneli-vnet-Dioneli-Rt-Subnet-nsg-northeurope",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/firewallPolicies",
            "apiVersion": "2024-05-01",
            "name": "[parameters('firewallPolicies_hub_firewall_policy_name')]",
            "location": "northeurope",
            "properties": {
                "sku": {
                    "tier": "Standard"
                },
                "threatIntelMode": "Alert"
            }
        },
        {
            "type": "Microsoft.Network/ipGroups",
            "apiVersion": "2024-05-01",
            "name": "[parameters('ipGroups_ipgroup1_name')]",
            "location": "northeurope",
            "properties": {
                "ipAddresses": [
                    "13.73.64.64/26",
                    "13.73.208.128/25",
                    "52.126.194.0/23"
                ]
            }
        },
        {
            "type": "Microsoft.Network/ipGroups",
            "apiVersion": "2024-05-01",
            "name": "[parameters('ipGroups_ipgroup2_name')]",
            "location": "northeurope",
            "properties": {
                "ipAddresses": [
                    "12.0.0.0/24",
                    "13.9.0.0/24"
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-05-01",
            "name": "[parameters('networkSecurityGroups_dioneli_vnet_Dioneli_Rt_Subnet_nsg_northeurope_name')]",
            "location": "northeurope",
            "tags": {
                "displayName": "dioneli-vnet"
            },
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-05-01",
            "name": "[parameters('networkSecurityGroups_dioneli_vnet_JumpboxSubnet_nsg_northeurope_name')]",
            "location": "northeurope",
            "tags": {
                "displayName": "dioneli-vnet"
            },
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-05-01",
            "name": "[parameters('networkSecurityGroups_ServersSubnet_nsg_name')]",
            "location": "northeurope",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-05-01",
            "name": "[parameters('networkSecurityGroups_vm_onprem_nsg_name')]",
            "location": "australiaeast",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-05-01",
            "name": "[parameters('networkSecurityGroups_vnet_hub_AzureBastionSubnet_nsg_northeurope_name')]",
            "location": "northeurope",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowGatewayManager",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_vnet_hub_AzureBastionSubnet_nsg_northeurope_name'), 'AllowGatewayManager')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "description": "Allow GatewayManager",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "GatewayManager",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 2702,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowHttpsInBound",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_vnet_hub_AzureBastionSubnet_nsg_northeurope_name'), 'AllowHttpsInBound')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "description": "Allow HTTPs",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 2703,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowSshRdpOutbound",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_vnet_hub_AzureBastionSubnet_nsg_northeurope_name'), 'AllowSshRdpOutbound')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [
                                "22",
                                "3389"
                            ],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureCloudOutbound",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_vnet_hub_AzureBastionSubnet_nsg_northeurope_name'), 'AllowAzureCloudOutbound')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "AzureCloud",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-05-01",
            "name": "[parameters('networkSecurityGroups_vnet_hub_workload_nsg_northeurope_name')]",
            "location": "northeurope",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-05-01",
            "name": "[parameters('networkSecurityGroups_vnet_onprem_workload_nsg_australiaeast_name')]",
            "location": "australiaeast",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-05-01",
            "name": "[parameters('networkSecurityGroups_vnet_spoke_AzureBastionSubnet_nsg_northeurope_name')]",
            "location": "northeurope",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowGatewayManager",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_vnet_spoke_AzureBastionSubnet_nsg_northeurope_name'), 'AllowGatewayManager')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "description": "Allow GatewayManager",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "GatewayManager",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 2702,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowHttpsInBound",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_vnet_spoke_AzureBastionSubnet_nsg_northeurope_name'), 'AllowHttpsInBound')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "description": "Allow HTTPs",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 2703,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowSshRdpOutbound",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_vnet_spoke_AzureBastionSubnet_nsg_northeurope_name'), 'AllowSshRdpOutbound')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [
                                "22",
                                "3389"
                            ],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureCloudOutbound",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_vnet_spoke_AzureBastionSubnet_nsg_northeurope_name'), 'AllowAzureCloudOutbound')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "AzureCloud",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-05-01",
            "name": "[parameters('networkSecurityGroups_vnet_spoke_workload_nsg_northeurope_name')]",
            "location": "northeurope",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-05-01",
            "name": "[parameters('publicIPAddresses_GW_hub_pip1_name')]",
            "location": "northeurope",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "20.238.90.246",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-05-01",
            "name": "[parameters('publicIPAddresses_GW_hub_pip2_name')]",
            "location": "northeurope",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "20.238.90.240",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-05-01",
            "name": "[parameters('publicIPAddresses_GW_onprem_pip1_name')]",
            "location": "australiaeast",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "52.156.191.72",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-05-01",
            "name": "[parameters('publicIPAddresses_GW_onprem_pip2_name')]",
            "location": "australiaeast",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "13.70.95.86",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-05-01",
            "name": "[parameters('publicIPAddresses_hub_firewall_pip_name')]",
            "location": "northeurope",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "zones": [
                "1",
                "2",
                "3"
            ],
            "properties": {
                "ipAddress": "4.207.233.130",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-05-01",
            "name": "[parameters('publicIPAddresses_vnet_hub_ip_name')]",
            "location": "northeurope",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "zones": [
                "1",
                "2",
                "3"
            ],
            "properties": {
                "ipAddress": "48.209.187.194",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2024-05-01",
            "name": "[parameters('routeTables_rt_hub_to_spoke_name')]",
            "location": "northeurope",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "ToSpoke",
                        "id": "[resourceId('Microsoft.Network/routeTables/routes', parameters('routeTables_rt_hub_to_spoke_name'), 'ToSpoke')]",
                        "properties": {
                            "addressPrefix": "10.6.0.0/16",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.5.0.4"
                        },
                        "type": "Microsoft.Network/routeTables/routes"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2024-05-01",
            "name": "[parameters('routeTables_rt_spoke_to_hub_name')]",
            "location": "northeurope",
            "properties": {
                "disableBgpRoutePropagation": true,
                "routes": [
                    {
                        "name": "ToHub",
                        "id": "[resourceId('Microsoft.Network/routeTables/routes', parameters('routeTables_rt_spoke_to_hub_name'), 'ToHub')]",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.5.0.4"
                        },
                        "type": "Microsoft.Network/routeTables/routes"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2024-11-01",
            "name": "[parameters('virtualMachines_vm_iis_name')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm_iis975_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2s_v3"
                },
                "additionalCapabilities": {
                    "hibernationEnabled": false
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-datacenter-gensecond",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_vm_iis_name'), '_disk1_acf012eba75c41e0a0bfec7bd0d35582')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_vm_iis_name'), '_disk1_acf012eba75c41e0a0bfec7bd0d35582'))]"
                        },
                        "deleteOption": "Delete"
                    },
                    "dataDisks": [],
                    "diskControllerType": "SCSI"
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_vm_iis_name')]",
                    "adminUsername": "Diana",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "patchSettings": {
                            "patchMode": "AutomaticByOS",
                            "assessmentMode": "ImageDefault",
                            "enableHotpatching": false
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm_iis975_name'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2024-11-01",
            "name": "[parameters('virtualMachines_vm_jumpbox_spoke_name')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm_jumpbox_spoke63_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2s_v3"
                },
                "additionalCapabilities": {
                    "hibernationEnabled": false
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-datacenter-gensecond",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_vm_jumpbox_spoke_name'), '_disk1_d41e579ecda74890a7e50a661bdc3bf7')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_vm_jumpbox_spoke_name'), '_disk1_d41e579ecda74890a7e50a661bdc3bf7'))]"
                        },
                        "deleteOption": "Delete"
                    },
                    "dataDisks": [],
                    "diskControllerType": "SCSI"
                },
                "osProfile": {
                    "computerName": "vm-jumpbox-spok",
                    "adminUsername": "Diana",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "patchSettings": {
                            "patchMode": "AutomaticByOS",
                            "assessmentMode": "ImageDefault",
                            "enableHotpatching": false
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm_jumpbox_spoke63_name'))]",
                            "properties": {
                                "deleteOption": "Delete"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2024-11-01",
            "name": "[parameters('virtualMachines_vm_onprem_name')]",
            "location": "australiaeast",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm_onprem940_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_DS1_v2"
                },
                "additionalCapabilities": {
                    "hibernationEnabled": false
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-datacenter-gensecond",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_vm_onprem_name'), '_OsDisk_1_95cf97b847e249f6bde75d3ffac23dd2')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_vm_onprem_name'), '_OsDisk_1_95cf97b847e249f6bde75d3ffac23dd2'))]"
                        },
                        "deleteOption": "Delete"
                    },
                    "dataDisks": [],
                    "diskControllerType": "SCSI"
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_vm_onprem_name')]",
                    "adminUsername": "Diana",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "patchSettings": {
                            "patchMode": "AutomaticByOS",
                            "assessmentMode": "ImageDefault",
                            "enableHotpatching": false
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm_onprem940_name'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2024-11-01",
            "name": "[concat(parameters('virtualMachines_vm_iis_name'), '/IIS')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_vm_iis_name'))]"
            ],
            "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.4",
                "settings": {
                    "commandToExecute": "powershell Add-WindowsFeature Web-Server; powershell Add-Content -Path \"C:\\inetpub\\wwwroot\\Default.htm\" -Value $($env:computername)"
                },
                "protectedSettings": {}
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2024-11-01",
            "name": "[concat(parameters('virtualMachines_vm_onprem_name'), '/IIS')]",
            "location": "australiaeast",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_vm_onprem_name'))]"
            ],
            "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.4",
                "settings": {
                    "commandToExecute": "powershell Add-WindowsFeature Web-Server; powershell Add-Content -Path \"C:\\inetpub\\wwwroot\\Default.htm\" -Value $($env:computername)"
                },
                "protectedSettings": {}
            }
        },
        {
            "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('firewallPolicies_hub_firewall_policy_name'), '/DefaultDnatRuleCollectionGroup')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicies_hub_firewall_policy_name'))]"
            ],
            "properties": {
                "priority": 100,
                "ruleCollections": [
                    {
                        "ruleCollectionType": "FirewallPolicyNatRuleCollection",
                        "action": {
                            "type": "Dnat"
                        },
                        "rules": [],
                        "name": "RC-DNAT",
                        "priority": 500
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('firewallPolicies_hub_firewall_policy_name'), '/DefaultNetworkRuleCollectionGroup')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicies_hub_firewall_policy_name'))]"
            ],
            "properties": {
                "priority": 200,
                "ruleCollections": [
                    {
                        "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                        "action": {
                            "type": "Allow"
                        },
                        "rules": [
                            {
                                "ruleType": "NetworkRule",
                                "name": "allow-tcp",
                                "ipProtocols": [
                                    "TCP"
                                ],
                                "sourceAddresses": [
                                    "192.168.0.0/16"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                    "10.6.0.0/16"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                    "80",
                                    "443"
                                ]
                            },
                            {
                                "ruleType": "NetworkRule",
                                "name": "RC-hub-onprem",
                                "ipProtocols": [
                                    "TCP"
                                ],
                                "sourceAddresses": [
                                    "10.6.0.0/16"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                    "192.168.0.0/16"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                    "80",
                                    "443"
                                ]
                            }
                        ],
                        "name": "RC-onprem-to-hub",
                        "priority": 5000
                    },
                    {
                        "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                        "action": {
                            "type": "Allow"
                        },
                        "rules": [
                            {
                                "ruleType": "NetworkRule",
                                "name": "allow-web-spoke",
                                "ipProtocols": [
                                    "TCP"
                                ],
                                "sourceAddresses": [
                                    "10.6.0.0/16"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                    "*"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                    "80",
                                    "443"
                                ]
                            },
                            {
                                "ruleType": "NetworkRule",
                                "name": "allow-web-on-prem",
                                "ipProtocols": [
                                    "TCP"
                                ],
                                "sourceAddresses": [
                                    "192.168.0.0/16"
                                ],
                                "sourceIpGroups": [],
                                "destinationAddresses": [
                                    "*"
                                ],
                                "destinationIpGroups": [],
                                "destinationFqdns": [],
                                "destinationPorts": [
                                    "80",
                                    "443"
                                ]
                            }
                        ],
                        "name": "RC-Net",
                        "priority": 150
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/natGateways",
            "apiVersion": "2024-05-01",
            "name": "[parameters('natGateways_hub_firewall_NAT_name')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_hub_firewall_NAT_pip_name'))]"
            ],
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "idleTimeoutInMinutes": 4,
                "publicIpAddresses": [
                    {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_hub_firewall_NAT_pip_name'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2024-05-01",
            "name": "[parameters('networkInterfaces_vm_iis975_name')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_spoke_name'), 'workload')]"
            ],
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm_iis975_name')), '/ipConfigurations/ipconfig1')]",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "privateIPAddress": "10.6.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_spoke_name'), 'workload')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": true,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "nicType": "Standard",
                "auxiliaryMode": "None",
                "auxiliarySku": "None"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2024-05-01",
            "name": "[parameters('networkInterfaces_vm_jumpbox_spoke63_name')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_spoke_name'), 'workload')]"
            ],
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm_jumpbox_spoke63_name')), '/ipConfigurations/ipconfig1')]",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "privateIPAddress": "10.6.0.5",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_spoke_name'), 'workload')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": true,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "nicType": "Standard",
                "auxiliaryMode": "None",
                "auxiliarySku": "None"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('networkSecurityGroups_vnet_hub_AzureBastionSubnet_nsg_northeurope_name'), '/AllowAzureCloudOutbound')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vnet_hub_AzureBastionSubnet_nsg_northeurope_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "AzureCloud",
                "access": "Allow",
                "priority": 110,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('networkSecurityGroups_vnet_spoke_AzureBastionSubnet_nsg_northeurope_name'), '/AllowAzureCloudOutbound')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vnet_spoke_AzureBastionSubnet_nsg_northeurope_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "AzureCloud",
                "access": "Allow",
                "priority": 110,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('networkSecurityGroups_vnet_hub_AzureBastionSubnet_nsg_northeurope_name'), '/AllowGatewayManager')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vnet_hub_AzureBastionSubnet_nsg_northeurope_name'))]"
            ],
            "properties": {
                "description": "Allow GatewayManager",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "GatewayManager",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2702,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('networkSecurityGroups_vnet_spoke_AzureBastionSubnet_nsg_northeurope_name'), '/AllowGatewayManager')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vnet_spoke_AzureBastionSubnet_nsg_northeurope_name'))]"
            ],
            "properties": {
                "description": "Allow GatewayManager",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "GatewayManager",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2702,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('networkSecurityGroups_vnet_hub_AzureBastionSubnet_nsg_northeurope_name'), '/AllowHttpsInBound')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vnet_hub_AzureBastionSubnet_nsg_northeurope_name'))]"
            ],
            "properties": {
                "description": "Allow HTTPs",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2703,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('networkSecurityGroups_vnet_spoke_AzureBastionSubnet_nsg_northeurope_name'), '/AllowHttpsInBound')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vnet_spoke_AzureBastionSubnet_nsg_northeurope_name'))]"
            ],
            "properties": {
                "description": "Allow HTTPs",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2703,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('networkSecurityGroups_vnet_hub_AzureBastionSubnet_nsg_northeurope_name'), '/AllowSshRdpOutbound')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vnet_hub_AzureBastionSubnet_nsg_northeurope_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 100,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [
                    "22",
                    "3389"
                ],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('networkSecurityGroups_vnet_spoke_AzureBastionSubnet_nsg_northeurope_name'), '/AllowSshRdpOutbound')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vnet_spoke_AzureBastionSubnet_nsg_northeurope_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 100,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [
                    "22",
                    "3389"
                ],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-05-01",
            "name": "[parameters('publicIPAddresses_hub_firewall_NAT_pip_name')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/natGateways', parameters('natGateways_hub_firewall_NAT_name'))]"
            ],
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "natGateway": {
                    "id": "[resourceId('Microsoft.Network/natGateways', parameters('natGateways_hub_firewall_NAT_name'))]"
                },
                "ipAddress": "52.178.202.136",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": [],
                "ddosSettings": {
                    "protectionMode": "VirtualNetworkInherited"
                }
            }
        },
        {
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('routeTables_rt_spoke_to_hub_name'), '/ToHub')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_rt_spoke_to_hub_name'))]"
            ],
            "properties": {
                "addressPrefix": "0.0.0.0/0",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "10.5.0.4"
            }
        },
        {
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('routeTables_rt_hub_to_spoke_name'), '/ToSpoke')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_rt_hub_to_spoke_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.6.0.0/16",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "10.5.0.4"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-05-01",
            "name": "[parameters('virtualNetworks_vnet_onprem_name')]",
            "location": "australiaeast",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vnet_onprem_workload_nsg_australiaeast_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "192.168.0.0/16"
                    ]
                },
                "encryption": {
                    "enabled": false,
                    "enforcement": "AllowUnencrypted"
                },
                "privateEndpointVNetPolicies": "Disabled",
                "dhcpOptions": {
                    "dnsServers": []
                },
                "subnets": [
                    {
                        "name": "workload",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_onprem_name'), 'workload')]",
                        "properties": {
                            "addressPrefix": "192.168.0.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vnet_onprem_workload_nsg_australiaeast_name'))]"
                            },
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "GatewaySubnet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_onprem_name'), 'GatewaySubnet')]",
                        "properties": {
                            "addressPrefix": "192.168.1.0/24",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('virtualNetworks_vnet_onprem_name'), '/GatewaySubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_onprem_name'))]"
            ],
            "properties": {
                "addressPrefix": "192.168.1.0/24",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2024-05-01",
            "name": "[parameters('bastionHosts_bastion_hub_name')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vnet_hub_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_hub_name'), 'AzureBastionSubnet')]"
            ],
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "dnsName": "bst-f77122e0-1843-4d2a-8bdc-50ab9a2f87c3.bastion.azure.com",
                "scaleUnits": 2,
                "enableTunneling": false,
                "enableIpConnect": false,
                "disableCopyPaste": false,
                "enableShareableLink": false,
                "enableKerberos": false,
                "enableSessionRecording": false,
                "enablePrivateOnlyBastion": false,
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "id": "[concat(resourceId('Microsoft.Network/bastionHosts', parameters('bastionHosts_bastion_hub_name')), '/bastionHostIpConfigurations/IpConf')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vnet_hub_ip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_hub_name'), 'AzureBastionSubnet')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "apiVersion": "2024-05-01",
            "name": "[parameters('connections_Hub_to_Onprem_name')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_GW_hub_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_GW_onprem_name'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_GW_hub_name'))]",
                    "properties": {}
                },
                "virtualNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_GW_onprem_name'))]",
                    "properties": {}
                },
                "connectionType": "Vnet2Vnet",
                "connectionProtocol": "IKEv2",
                "routingWeight": 0,
                "enableBgp": false,
                "useLocalAzureIpAddress": false,
                "usePolicyBasedTrafficSelectors": false,
                "ipsecPolicies": [],
                "trafficSelectorPolicies": [],
                "expressRouteGatewayBypass": false,
                "enablePrivateLinkFastPath": false,
                "dpdTimeoutSeconds": 45,
                "connectionMode": "Default",
                "gatewayCustomBgpIpAddresses": []
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "apiVersion": "2024-05-01",
            "name": "[parameters('connections_Onprem_to_Hub_name')]",
            "location": "australiaeast",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_GW_onprem_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_GW_hub_name'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_GW_onprem_name'))]",
                    "properties": {}
                },
                "virtualNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_GW_hub_name'))]",
                    "properties": {}
                },
                "connectionType": "Vnet2Vnet",
                "connectionProtocol": "IKEv2",
                "routingWeight": 0,
                "enableBgp": false,
                "useLocalAzureIpAddress": false,
                "usePolicyBasedTrafficSelectors": false,
                "ipsecPolicies": [],
                "trafficSelectorPolicies": [],
                "expressRouteGatewayBypass": false,
                "enablePrivateLinkFastPath": false,
                "dpdTimeoutSeconds": 45,
                "connectionMode": "Default",
                "gatewayCustomBgpIpAddresses": []
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2024-05-01",
            "name": "[parameters('networkInterfaces_vm_onprem940_name')]",
            "location": "australiaeast",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_onprem_name'), 'workload')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vm_onprem_nsg_name'))]"
            ],
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm_onprem940_name')), '/ipConfigurations/ipconfig1')]",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "privateIPAddress": "192.168.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_onprem_name'), 'workload')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": true,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vm_onprem_nsg_name'))]"
                },
                "nicType": "Standard",
                "auxiliaryMode": "None",
                "auxiliarySku": "None"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('virtualNetworks_vnet_hub_name'), '/AzureBastionSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_hub_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vnet_hub_AzureBastionSubnet_nsg_northeurope_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.5.1.0/26",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vnet_hub_AzureBastionSubnet_nsg_northeurope_name'))]"
                },
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('virtualNetworks_vnet_spoke_name'), '/AzureBastionSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_spoke_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vnet_spoke_AzureBastionSubnet_nsg_northeurope_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.6.1.0/26",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vnet_spoke_AzureBastionSubnet_nsg_northeurope_name'))]"
                },
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled",
                "defaultOutboundAccess": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('virtualNetworks_vnet_hub_name'), '/AzureFirewallSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_hub_name'))]",
                "[resourceId('Microsoft.Network/natGateways', parameters('natGateways_hub_firewall_NAT_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.5.0.0/26",
                "natGateway": {
                    "id": "[resourceId('Microsoft.Network/natGateways', parameters('natGateways_hub_firewall_NAT_name'))]"
                },
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('virtualNetworks_vnet_hub_name'), '/GatewaySubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_hub_name'))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_rt_hub_to_spoke_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.5.3.0/24",
                "routeTable": {
                    "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_rt_hub_to_spoke_name'))]"
                },
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('virtualNetworks_vnet_onprem_name'), '/workload')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_onprem_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vnet_onprem_workload_nsg_australiaeast_name'))]"
            ],
            "properties": {
                "addressPrefix": "192.168.0.0/24",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vnet_onprem_workload_nsg_australiaeast_name'))]"
                },
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('virtualNetworks_vnet_hub_name'), '/Hub-to-Spoke')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_hub_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_spoke_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "peeringSyncLevel": "FullyInSync",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_spoke_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": true,
                "useRemoteGateways": false,
                "doNotVerifyRemoteGateways": false,
                "peerCompleteVnets": true,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.6.0.0/16"
                    ]
                },
                "remoteVirtualNetworkAddressSpace": {
                    "addressPrefixes": [
                        "10.6.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('virtualNetworks_vnet_spoke_name'), '/Spoke-to-Hub')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_spoke_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_hub_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "peeringSyncLevel": "FullyInSync",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_hub_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": true,
                "doNotVerifyRemoteGateways": false,
                "peerCompleteVnets": true,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.5.0.0/16"
                    ]
                },
                "remoteVirtualNetworkAddressSpace": {
                    "addressPrefixes": [
                        "10.5.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "2024-05-01",
            "name": "[parameters('azureFirewalls_hub_firewall_name')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_hub_firewall_pip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_hub_name'), 'AzureFirewallSubnet')]",
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicies_hub_firewall_policy_name'))]"
            ],
            "zones": [
                "1",
                "2",
                "3"
            ],
            "properties": {
                "sku": {
                    "name": "AZFW_VNet",
                    "tier": "Standard"
                },
                "threatIntelMode": "Alert",
                "additionalProperties": {},
                "ipConfigurations": [
                    {
                        "name": "[concat(parameters('azureFirewalls_hub_firewall_name'), '-pip')]",
                        "id": "[concat(resourceId('Microsoft.Network/azureFirewalls', parameters('azureFirewalls_hub_firewall_name')), concat('/azureFirewallIpConfigurations/', parameters('azureFirewalls_hub_firewall_name'), '-pip'))]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_hub_firewall_pip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_hub_name'), 'AzureFirewallSubnet')]"
                            }
                        }
                    }
                ],
                "networkRuleCollections": [],
                "applicationRuleCollections": [],
                "natRuleCollections": [],
                "firewallPolicy": {
                    "id": "[resourceId('Microsoft.Network/firewallPolicies', parameters('firewallPolicies_hub_firewall_policy_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworkGateways",
            "apiVersion": "2024-05-01",
            "name": "[parameters('virtualNetworkGateways_GW_hub_name')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_GW_hub_pip1_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_hub_name'), 'GatewaySubnet')]",
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_GW_hub_pip2_name'))]"
            ],
            "properties": {
                "enablePrivateIpAddress": false,
                "ipConfigurations": [
                    {
                        "name": "default",
                        "id": "[concat(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_GW_hub_name')), '/ipConfigurations/default')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_GW_hub_pip1_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_hub_name'), 'GatewaySubnet')]"
                            }
                        }
                    },
                    {
                        "name": "activeActive",
                        "id": "[concat(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_GW_hub_name')), '/ipConfigurations/activeActive')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_GW_hub_pip2_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_hub_name'), 'GatewaySubnet')]"
                            }
                        }
                    }
                ],
                "natRules": [],
                "virtualNetworkGatewayPolicyGroups": [],
                "enableBgpRouteTranslationForNat": false,
                "disableIPSecReplayProtection": false,
                "sku": {
                    "name": "VpnGw1",
                    "tier": "VpnGw1"
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": false,
                "activeActive": true,
                "vpnClientConfiguration": {
                    "vpnClientProtocols": [
                        "OpenVPN",
                        "IkeV2"
                    ],
                    "vpnAuthenticationTypes": [],
                    "vpnClientRootCertificates": [],
                    "vpnClientRevokedCertificates": [],
                    "vngClientConnectionConfigurations": [],
                    "radiusServers": [],
                    "vpnClientIpsecPolicies": []
                },
                "bgpSettings": {
                    "asn": 65515,
                    "bgpPeeringAddress": "10.5.3.5,10.5.3.4",
                    "peerWeight": 0,
                    "bgpPeeringAddresses": [
                        {
                            "ipconfigurationId": "[concat(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_GW_hub_name')), '/ipConfigurations/default')]",
                            "customBgpIpAddresses": []
                        },
                        {
                            "ipconfigurationId": "[concat(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_GW_hub_name')), '/ipConfigurations/activeActive')]",
                            "customBgpIpAddresses": []
                        }
                    ]
                },
                "vpnGatewayGeneration": "Generation1",
                "allowRemoteVnetTraffic": false,
                "allowVirtualWanTraffic": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworkGateways",
            "apiVersion": "2024-05-01",
            "name": "[parameters('virtualNetworkGateways_GW_onprem_name')]",
            "location": "australiaeast",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_GW_onprem_pip1_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_onprem_name'), 'GatewaySubnet')]",
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_GW_onprem_pip2_name'))]"
            ],
            "properties": {
                "enablePrivateIpAddress": false,
                "ipConfigurations": [
                    {
                        "name": "default",
                        "id": "[concat(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_GW_onprem_name')), '/ipConfigurations/default')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_GW_onprem_pip1_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_onprem_name'), 'GatewaySubnet')]"
                            }
                        }
                    },
                    {
                        "name": "activeActive",
                        "id": "[concat(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_GW_onprem_name')), '/ipConfigurations/activeActive')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_GW_onprem_pip2_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_onprem_name'), 'GatewaySubnet')]"
                            }
                        }
                    }
                ],
                "natRules": [],
                "virtualNetworkGatewayPolicyGroups": [],
                "enableBgpRouteTranslationForNat": false,
                "disableIPSecReplayProtection": false,
                "sku": {
                    "name": "VpnGw1",
                    "tier": "VpnGw1"
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": false,
                "activeActive": true,
                "vpnClientConfiguration": {
                    "vpnClientProtocols": [
                        "OpenVPN",
                        "IkeV2"
                    ],
                    "vpnAuthenticationTypes": [],
                    "vpnClientRootCertificates": [],
                    "vpnClientRevokedCertificates": [],
                    "vngClientConnectionConfigurations": [],
                    "radiusServers": [],
                    "vpnClientIpsecPolicies": []
                },
                "bgpSettings": {
                    "asn": 65515,
                    "bgpPeeringAddress": "192.168.1.5,192.168.1.4",
                    "peerWeight": 0,
                    "bgpPeeringAddresses": [
                        {
                            "ipconfigurationId": "[concat(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_GW_onprem_name')), '/ipConfigurations/default')]",
                            "customBgpIpAddresses": []
                        },
                        {
                            "ipconfigurationId": "[concat(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_GW_onprem_name')), '/ipConfigurations/activeActive')]",
                            "customBgpIpAddresses": []
                        }
                    ]
                },
                "vpnGatewayGeneration": "Generation1",
                "allowRemoteVnetTraffic": false,
                "allowVirtualWanTraffic": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('virtualNetworks_vnet_spoke_name'), '/workload')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_spoke_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vnet_spoke_workload_nsg_northeurope_name'))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_rt_spoke_to_hub_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.6.0.0/24",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vnet_spoke_workload_nsg_northeurope_name'))]"
                },
                "routeTable": {
                    "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_rt_spoke_to_hub_name'))]"
                },
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-05-01",
            "name": "[parameters('virtualNetworks_vnet_hub_name')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/natGateways', parameters('natGateways_hub_firewall_NAT_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vnet_hub_AzureBastionSubnet_nsg_northeurope_name'))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_rt_hub_to_spoke_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_spoke_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.5.0.0/16"
                    ]
                },
                "encryption": {
                    "enabled": false,
                    "enforcement": "AllowUnencrypted"
                },
                "privateEndpointVNetPolicies": "Disabled",
                "dhcpOptions": {
                    "dnsServers": []
                },
                "subnets": [
                    {
                        "name": "AzureFirewallSubnet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_hub_name'), 'AzureFirewallSubnet')]",
                        "properties": {
                            "addressPrefix": "10.5.0.0/26",
                            "natGateway": {
                                "id": "[resourceId('Microsoft.Network/natGateways', parameters('natGateways_hub_firewall_NAT_name'))]"
                            },
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_hub_name'), 'AzureBastionSubnet')]",
                        "properties": {
                            "addressPrefix": "10.5.1.0/26",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vnet_hub_AzureBastionSubnet_nsg_northeurope_name'))]"
                            },
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "GatewaySubnet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_hub_name'), 'GatewaySubnet')]",
                        "properties": {
                            "addressPrefix": "10.5.3.0/24",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_rt_hub_to_spoke_name'))]"
                            },
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "Hub-to-Spoke",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('virtualNetworks_vnet_hub_name'), 'Hub-to-Spoke')]",
                        "properties": {
                            "peeringState": "Connected",
                            "peeringSyncLevel": "FullyInSync",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_spoke_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": true,
                            "allowGatewayTransit": true,
                            "useRemoteGateways": false,
                            "doNotVerifyRemoteGateways": false,
                            "peerCompleteVnets": true,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.6.0.0/16"
                                ]
                            },
                            "remoteVirtualNetworkAddressSpace": {
                                "addressPrefixes": [
                                    "10.6.0.0/16"
                                ]
                            }
                        },
                        "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                    }
                ],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-05-01",
            "name": "[parameters('virtualNetworks_vnet_spoke_name')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vnet_spoke_AzureBastionSubnet_nsg_northeurope_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vnet_spoke_workload_nsg_northeurope_name'))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_rt_spoke_to_hub_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_hub_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.6.0.0/16"
                    ]
                },
                "encryption": {
                    "enabled": false,
                    "enforcement": "AllowUnencrypted"
                },
                "privateEndpointVNetPolicies": "Disabled",
                "dhcpOptions": {
                    "dnsServers": []
                },
                "subnets": [
                    {
                        "name": "AzureBastionSubnet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_spoke_name'), 'AzureBastionSubnet')]",
                        "properties": {
                            "addressPrefix": "10.6.1.0/26",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vnet_spoke_AzureBastionSubnet_nsg_northeurope_name'))]"
                            },
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled",
                            "defaultOutboundAccess": false
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "workload",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_spoke_name'), 'workload')]",
                        "properties": {
                            "addressPrefix": "10.6.0.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_vnet_spoke_workload_nsg_northeurope_name'))]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_rt_spoke_to_hub_name'))]"
                            },
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "Spoke-to-Hub",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('virtualNetworks_vnet_spoke_name'), 'Spoke-to-Hub')]",
                        "properties": {
                            "peeringState": "Connected",
                            "peeringSyncLevel": "FullyInSync",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_hub_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": true,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": true,
                            "doNotVerifyRemoteGateways": false,
                            "peerCompleteVnets": true,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.5.0.0/16"
                                ]
                            },
                            "remoteVirtualNetworkAddressSpace": {
                                "addressPrefixes": [
                                    "10.5.0.0/16"
                                ]
                            }
                        },
                        "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                    }
                ],
                "enableDdosProtection": false
            }
        }
    ]
}
